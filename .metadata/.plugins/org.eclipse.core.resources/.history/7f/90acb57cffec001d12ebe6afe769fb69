import io.restassured.RestAssured;
import static io.restassured.RestAssured.*;

import files.Payload;
import files.ReusableMethods;

public class Basics {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// Given: All input details. given().queryParam("key","value").headers("key","value").body("value") i.e., Chain queryParm, headers, body
		// When: Submit the API. when().HTTPVerb("resource") //resource is concatenated with baseURI
		// Then: Validate the response
		// Use given().log().all().queryParam
		RestAssured.baseURI = "https://rahulshettyacademy.com";
		
		// response
		String response = 
				given()//.log().all()
					.queryParam("key", "qaclick123")
					.headers("Content-Type","application/json")
					.body(Payload.AddPlace()) // Only value is used. Class with static method AddPlace is added in payload class
				.when()
					.post("/maps/api/place/add/json")
				.then()//.log().all()
					.assertThat()
						.statusCode(200)
						.body("scope",equalTo("APP")) // equalTo is used in .body("", equalTo(""))
						.header("server","Apache/2.4.41 (Ubuntu)") // key-value pair
				.extract().response().asString();		
		// Add Place and then Update Place and then GetPlace to assertThat()
		// .extract().response().asString() extracts the entire response
		//System.out.println(response);
		
		
		String placeId = ReusableMethods.getParamValueFromJson(response, "place_id");
		
		System.out.println(placeId);
		
		String newAddress = "70 winter walk updated, USA";
		// PUT
		given().log().all()
			.queryParam("key", "qaclick123")
			//.queryParam("place_id", placeId)
			.header("Content-type","application/json")
			.body("{\n"
					+ "\"place_id\":\""+placeId+"\",\n"
					+ "\"address\":\""+newAddress+"\",\n"
					+ "\"key\":\"qaclick123\"\n"
					+ "}")
		.when()
			.put("maps/api/place/update/json") // resource should be put here.
		.then().log().all()
			.assertThat()
				.statusCode(200);
				//.body("msg",equalTo("Address successfully updated"));
		
		// GET
		
		String getPlaceResponse = given().log().all()
			.queryParam("key", "qaclick123")
			.queryParam("place_id", placeId)
			//.header("Content-type","application/JSON") NOT REQUIRED
		.when()
			.get("maps/api/place/get/json") // resource should be put here.
		.then().log().all()
			.assertThat()
				.statusCode(200)
		.extract().response().asString();
		
		String actualAddress = ReusableMethods.getParamValueFromJson(getPlaceResponse,"address");
		System.out.println(actualAddress);
		
		//CUCUMBER JUNIT and TESTNG
		Assert.assertEquals(actualAddress, newAddress);
		
	}
	
	

}
